// Generated by view binder compiler. Do not edit!
package com.example.myapplicationformams.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplicationformams.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Spinner AdviceAnswers;

  @NonNull
  public final TextView AdviceQuestion;

  @NonNull
  public final Spinner AnnoyanceAnswer;

  @NonNull
  public final TextView AskAnnoyance;

  @NonNull
  public final TextView AskForDate;

  @NonNull
  public final TextView AskForNotes;

  @NonNull
  public final TextView AskRy;

  @NonNull
  public final TextView AskSleep;

  @NonNull
  public final TextView AskVoice;

  @NonNull
  public final Spinner CriticAnswer;

  @NonNull
  public final TextView CriticQuestion;

  @NonNull
  public final Spinner CryAnswers;

  @NonNull
  public final EditText Date;

  @NonNull
  public final Spinner FoolAnswer;

  @NonNull
  public final TextView FoolQuestion;

  @NonNull
  public final TextView Hello;

  @NonNull
  public final Spinner KissAnswers;

  @NonNull
  public final TextView KissQuestion;

  @NonNull
  public final Spinner LaughterAnswers;

  @NonNull
  public final TextView LaughterQuestion;

  @NonNull
  public final Spinner LoveAnswer;

  @NonNull
  public final TextView LoveQuestion;

  @NonNull
  public final Spinner NegativeEmotionsAnswers;

  @NonNull
  public final EditText Notes;

  @NonNull
  public final Spinner NoticeAnswer;

  @NonNull
  public final TextView NoticeQuestion;

  @NonNull
  public final Button Okey;

  @NonNull
  public final Button Okey1;

  @NonNull
  public final Button Okey2;

  @NonNull
  public final Spinner ReactionAnswers;

  @NonNull
  public final TextView ReactionQuestion;

  @NonNull
  public final Button SaveNotes;

  @NonNull
  public final Button StepToNotes;

  @NonNull
  public final TextView SuggestionText;

  @NonNull
  public final TextView SupportMassage;

  @NonNull
  public final TextView SupportMassage1;

  @NonNull
  public final TextView SupportMassage2;

  @NonNull
  public final Spinner VoiceAnswers;

  private ActivityMainBinding(@NonNull ScrollView rootView, @NonNull Spinner AdviceAnswers,
      @NonNull TextView AdviceQuestion, @NonNull Spinner AnnoyanceAnswer,
      @NonNull TextView AskAnnoyance, @NonNull TextView AskForDate, @NonNull TextView AskForNotes,
      @NonNull TextView AskRy, @NonNull TextView AskSleep, @NonNull TextView AskVoice,
      @NonNull Spinner CriticAnswer, @NonNull TextView CriticQuestion, @NonNull Spinner CryAnswers,
      @NonNull EditText Date, @NonNull Spinner FoolAnswer, @NonNull TextView FoolQuestion,
      @NonNull TextView Hello, @NonNull Spinner KissAnswers, @NonNull TextView KissQuestion,
      @NonNull Spinner LaughterAnswers, @NonNull TextView LaughterQuestion,
      @NonNull Spinner LoveAnswer, @NonNull TextView LoveQuestion,
      @NonNull Spinner NegativeEmotionsAnswers, @NonNull EditText Notes,
      @NonNull Spinner NoticeAnswer, @NonNull TextView NoticeQuestion, @NonNull Button Okey,
      @NonNull Button Okey1, @NonNull Button Okey2, @NonNull Spinner ReactionAnswers,
      @NonNull TextView ReactionQuestion, @NonNull Button SaveNotes, @NonNull Button StepToNotes,
      @NonNull TextView SuggestionText, @NonNull TextView SupportMassage,
      @NonNull TextView SupportMassage1, @NonNull TextView SupportMassage2,
      @NonNull Spinner VoiceAnswers) {
    this.rootView = rootView;
    this.AdviceAnswers = AdviceAnswers;
    this.AdviceQuestion = AdviceQuestion;
    this.AnnoyanceAnswer = AnnoyanceAnswer;
    this.AskAnnoyance = AskAnnoyance;
    this.AskForDate = AskForDate;
    this.AskForNotes = AskForNotes;
    this.AskRy = AskRy;
    this.AskSleep = AskSleep;
    this.AskVoice = AskVoice;
    this.CriticAnswer = CriticAnswer;
    this.CriticQuestion = CriticQuestion;
    this.CryAnswers = CryAnswers;
    this.Date = Date;
    this.FoolAnswer = FoolAnswer;
    this.FoolQuestion = FoolQuestion;
    this.Hello = Hello;
    this.KissAnswers = KissAnswers;
    this.KissQuestion = KissQuestion;
    this.LaughterAnswers = LaughterAnswers;
    this.LaughterQuestion = LaughterQuestion;
    this.LoveAnswer = LoveAnswer;
    this.LoveQuestion = LoveQuestion;
    this.NegativeEmotionsAnswers = NegativeEmotionsAnswers;
    this.Notes = Notes;
    this.NoticeAnswer = NoticeAnswer;
    this.NoticeQuestion = NoticeQuestion;
    this.Okey = Okey;
    this.Okey1 = Okey1;
    this.Okey2 = Okey2;
    this.ReactionAnswers = ReactionAnswers;
    this.ReactionQuestion = ReactionQuestion;
    this.SaveNotes = SaveNotes;
    this.StepToNotes = StepToNotes;
    this.SuggestionText = SuggestionText;
    this.SupportMassage = SupportMassage;
    this.SupportMassage1 = SupportMassage1;
    this.SupportMassage2 = SupportMassage2;
    this.VoiceAnswers = VoiceAnswers;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AdviceAnswers;
      Spinner AdviceAnswers = ViewBindings.findChildViewById(rootView, id);
      if (AdviceAnswers == null) {
        break missingId;
      }

      id = R.id.AdviceQuestion;
      TextView AdviceQuestion = ViewBindings.findChildViewById(rootView, id);
      if (AdviceQuestion == null) {
        break missingId;
      }

      id = R.id.AnnoyanceAnswer;
      Spinner AnnoyanceAnswer = ViewBindings.findChildViewById(rootView, id);
      if (AnnoyanceAnswer == null) {
        break missingId;
      }

      id = R.id.AskAnnoyance;
      TextView AskAnnoyance = ViewBindings.findChildViewById(rootView, id);
      if (AskAnnoyance == null) {
        break missingId;
      }

      id = R.id.AskForDate;
      TextView AskForDate = ViewBindings.findChildViewById(rootView, id);
      if (AskForDate == null) {
        break missingId;
      }

      id = R.id.AskForNotes;
      TextView AskForNotes = ViewBindings.findChildViewById(rootView, id);
      if (AskForNotes == null) {
        break missingId;
      }

      id = R.id.Ask–°ry;
      TextView AskRy = ViewBindings.findChildViewById(rootView, id);
      if (AskRy == null) {
        break missingId;
      }

      id = R.id.AskSleep;
      TextView AskSleep = ViewBindings.findChildViewById(rootView, id);
      if (AskSleep == null) {
        break missingId;
      }

      id = R.id.AskVoice;
      TextView AskVoice = ViewBindings.findChildViewById(rootView, id);
      if (AskVoice == null) {
        break missingId;
      }

      id = R.id.CriticAnswer;
      Spinner CriticAnswer = ViewBindings.findChildViewById(rootView, id);
      if (CriticAnswer == null) {
        break missingId;
      }

      id = R.id.CriticQuestion;
      TextView CriticQuestion = ViewBindings.findChildViewById(rootView, id);
      if (CriticQuestion == null) {
        break missingId;
      }

      id = R.id.CryAnswers;
      Spinner CryAnswers = ViewBindings.findChildViewById(rootView, id);
      if (CryAnswers == null) {
        break missingId;
      }

      id = R.id.Date;
      EditText Date = ViewBindings.findChildViewById(rootView, id);
      if (Date == null) {
        break missingId;
      }

      id = R.id.FoolAnswer;
      Spinner FoolAnswer = ViewBindings.findChildViewById(rootView, id);
      if (FoolAnswer == null) {
        break missingId;
      }

      id = R.id.FoolQuestion;
      TextView FoolQuestion = ViewBindings.findChildViewById(rootView, id);
      if (FoolQuestion == null) {
        break missingId;
      }

      id = R.id.Hello;
      TextView Hello = ViewBindings.findChildViewById(rootView, id);
      if (Hello == null) {
        break missingId;
      }

      id = R.id.KissAnswers;
      Spinner KissAnswers = ViewBindings.findChildViewById(rootView, id);
      if (KissAnswers == null) {
        break missingId;
      }

      id = R.id.KissQuestion;
      TextView KissQuestion = ViewBindings.findChildViewById(rootView, id);
      if (KissQuestion == null) {
        break missingId;
      }

      id = R.id.LaughterAnswers;
      Spinner LaughterAnswers = ViewBindings.findChildViewById(rootView, id);
      if (LaughterAnswers == null) {
        break missingId;
      }

      id = R.id.LaughterQuestion;
      TextView LaughterQuestion = ViewBindings.findChildViewById(rootView, id);
      if (LaughterQuestion == null) {
        break missingId;
      }

      id = R.id.LoveAnswer;
      Spinner LoveAnswer = ViewBindings.findChildViewById(rootView, id);
      if (LoveAnswer == null) {
        break missingId;
      }

      id = R.id.LoveQuestion;
      TextView LoveQuestion = ViewBindings.findChildViewById(rootView, id);
      if (LoveQuestion == null) {
        break missingId;
      }

      id = R.id.NegativeEmotionsAnswers;
      Spinner NegativeEmotionsAnswers = ViewBindings.findChildViewById(rootView, id);
      if (NegativeEmotionsAnswers == null) {
        break missingId;
      }

      id = R.id.Notes;
      EditText Notes = ViewBindings.findChildViewById(rootView, id);
      if (Notes == null) {
        break missingId;
      }

      id = R.id.NoticeAnswer;
      Spinner NoticeAnswer = ViewBindings.findChildViewById(rootView, id);
      if (NoticeAnswer == null) {
        break missingId;
      }

      id = R.id.NoticeQuestion;
      TextView NoticeQuestion = ViewBindings.findChildViewById(rootView, id);
      if (NoticeQuestion == null) {
        break missingId;
      }

      id = R.id.Okey;
      Button Okey = ViewBindings.findChildViewById(rootView, id);
      if (Okey == null) {
        break missingId;
      }

      id = R.id.Okey1;
      Button Okey1 = ViewBindings.findChildViewById(rootView, id);
      if (Okey1 == null) {
        break missingId;
      }

      id = R.id.Okey2;
      Button Okey2 = ViewBindings.findChildViewById(rootView, id);
      if (Okey2 == null) {
        break missingId;
      }

      id = R.id.ReactionAnswers;
      Spinner ReactionAnswers = ViewBindings.findChildViewById(rootView, id);
      if (ReactionAnswers == null) {
        break missingId;
      }

      id = R.id.ReactionQuestion;
      TextView ReactionQuestion = ViewBindings.findChildViewById(rootView, id);
      if (ReactionQuestion == null) {
        break missingId;
      }

      id = R.id.SaveNotes;
      Button SaveNotes = ViewBindings.findChildViewById(rootView, id);
      if (SaveNotes == null) {
        break missingId;
      }

      id = R.id.StepToNotes;
      Button StepToNotes = ViewBindings.findChildViewById(rootView, id);
      if (StepToNotes == null) {
        break missingId;
      }

      id = R.id.SuggestionText;
      TextView SuggestionText = ViewBindings.findChildViewById(rootView, id);
      if (SuggestionText == null) {
        break missingId;
      }

      id = R.id.SupportMassage;
      TextView SupportMassage = ViewBindings.findChildViewById(rootView, id);
      if (SupportMassage == null) {
        break missingId;
      }

      id = R.id.SupportMassage1;
      TextView SupportMassage1 = ViewBindings.findChildViewById(rootView, id);
      if (SupportMassage1 == null) {
        break missingId;
      }

      id = R.id.SupportMassage2;
      TextView SupportMassage2 = ViewBindings.findChildViewById(rootView, id);
      if (SupportMassage2 == null) {
        break missingId;
      }

      id = R.id.VoiceAnswers;
      Spinner VoiceAnswers = ViewBindings.findChildViewById(rootView, id);
      if (VoiceAnswers == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, AdviceAnswers, AdviceQuestion,
          AnnoyanceAnswer, AskAnnoyance, AskForDate, AskForNotes, AskRy, AskSleep, AskVoice,
          CriticAnswer, CriticQuestion, CryAnswers, Date, FoolAnswer, FoolQuestion, Hello,
          KissAnswers, KissQuestion, LaughterAnswers, LaughterQuestion, LoveAnswer, LoveQuestion,
          NegativeEmotionsAnswers, Notes, NoticeAnswer, NoticeQuestion, Okey, Okey1, Okey2,
          ReactionAnswers, ReactionQuestion, SaveNotes, StepToNotes, SuggestionText, SupportMassage,
          SupportMassage1, SupportMassage2, VoiceAnswers);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
